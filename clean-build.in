#!/bin/bash

# Helper functions
error() {
	echo "$PROG: $1"
	exit 1
}

# Actions
parse_makecore_options() {
    while [ "$1" ]; do
        case "$1" in
            -f|--force)
                CB_FORCE_MAKE="true" ;;
            -*)
                error "unknown action option $1" ;;
            *)
                if [ "$CB_CORE_PATH" ]; then
                    error "too many arguments, $1"
                fi
                CB_CORE_PATH="$1" ;;
        esac
        shift
    done
}

makecore() {
    if [ -e "$CB_CORE_PATH" -a -z "$CB_FORCE_MAKE" ]; then
        error "$CORE_PATH exists, use -f to force creation"
    fi
    echo "$CB_CORE_PATH"
}

# Options parsing and related functions
load_config() {
    if [ ! -f "$CB_CONFIG_FILE" ]; then
        error "file $CB_CONFIG_FILE does not exist"
    fi
    . "$CB_CONFIG_FILE"
}

print_version() {
    echo "$PROG @@VERSION@@"
}

print_usage() {
    echo "usage: $PROG [options] <action> [action_options]"
    echo "-h or --help for more information"
}

print_help() {
	cat <<EOF
options:
    -v,--version   display version
    -h,--help       display this message
    
actions:
EOF
}

parse_options() {
    EXTRA_OPTIONS=()
    
	while [ "$1" ]; do
		case $1 in
            -cf|--config-file)
                if [ ! "$2" ]; then
                    error "$1 requires an argument"
                fi
                CB_CONFIG_FILE="$2"
                shift ;;
            -v|--version)
                print_version
                exit 0;;
			-h|--help)
				print_help
				exit 0;;
			*)
				EXTRA_OPTIONS=(${EXTRA_OPTIONS[@]} $1)
				;;
		esac
        shift
	done
}

parse_action() {
    ACTION=$EXTRA_OPTIONS
    ACTION_OPTIONS=()
    
    for opt in ${EXTRA_OPTIONS[@]}; do
        if [ "$opt" != "$ACTION" ]; then
            ACTION_OPTIONS=(${ACTION_OPTIONS[@]} $opt)
        fi
    done
    
    case $ACTION in
        makecore|cleancore)
            parse_${ACTION}_options ${ACTION_OPTIONS[@]} ;;
        -*)
            error "unknown option $ACTION" ;;
        *)
            error "unknown action $ACTION" ;;
    esac
}

main() {
    if [ ! "$1" ]; then
        print_usage
        exit 1;
    fi
    
	parse_options "$@"
    load_config
    parse_action
    
    $ACTION
}

# Initialize some variables
PROG="`basename $0`"

# Start the program
main "$@"

# End of file
